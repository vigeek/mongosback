###################################################
# mongosback configuration file
##################################################

###################################################
# general settings
###################################################


PID_FILE="/var/run/mongosback.pid"
LOG_FILE="/var/log/mongo-backup.log"
# Location to store backup (and archives if enabled)
BACKUP_PATH="/mongo_backup"
# Also log to syslog? (useful for encountered errors)
SYSLOG="1"

# Enabling this will disable compression, archiving and exporting.
# Useful if simple dumps are needed with error handling and throttling.
SIMPLE_BACKUP="0"

# NOTE:  LVM & RAW backups not fully complete, do not enable.
# LVM snapshots, create snapshots of mongo data.
LVM_SNAPSHOTS="0"
# Source logical volume (destination is backup_path)
SOURCE_LV="/dev/mapper/vg_me-lv_main"

# RAW data backup method (copy on disk data to archive).
RAW_BACKUP="0"
# Mongodata location (path to mongo data files)
MONGO_DATA_LOCATION="/path/to/data"


###################################################
# mongo settings
###################################################

# Path to mongodump, if left blank, script will attempt to locate
MONGO_DUMP="/usr/bin/mongodump"
# Mongo host and port
MONGO_HOST_PORT="127.0.0.1:27017"

# connectivity cedentials
MONGO_USER=""
MONGO_PASS=""

# Add any additional mongodump options here
MONGO_DUMP_OPTIONS=""
# Which database to backup (leave blank to backup all databases)
# If using the "--oplog" mongodump option, leave this blank.
DO_BACKUP="db_name"

###################################################
# arhchiving settings
###################################################

ARCHIVE="1"
DAYS_TO_KEEP="3"

###################################################
# performance settings
###################################################

# IO/CPU Process Priority (accepts:  idle, low, normal, high)
PERFORMANCE_THROTTLING="normal"
# Enable gzip compression
COMPRESS="1"
# Compression level (accepts: fast, normal, best)
COMPRESSION_LEVEL="fast"

###################################################
# email settings
###################################################

# Send success or failure e-mails with details.
EMAIL_REPORT="0"

# Email details
EMAIL_ADDRESS="mongo@domain.com"
# Subject is generated (mongohost - success/failure - backup size - backup time)

###################################################
# export options (move to rremote server)
###################################################

# Upload backup to FTP?
FTP_EXPORT="0"

# FTP connectivity information
FTP_HOST="ftp.remotehost.com"
FTP_USER="backup_usr"
FTP_PASS="password"

# FTP path(where do you want the backups stored?)
FTP_PATH="/backups"

# Transfer file through ssh/scp? (key based login only)
SCP_EXPORT="0"

# SCP connectivity information
SCP_USER="backup_usr"
SCP_HOST="55.66.77.88"
SCP_PORT="22"

# SCP path(where do you want the backups stored?)
SCP_PATH="/home/backup_usr/mongo_backups"

# Upload to AWS S3, needs the s3cmd tool to be configured and installed
S3_EXPORT="0"
# Bucket name
S3_BUCKET_NAME="bucketname_here"
# Folder inside S3_BUCKET_NAME (leave blank if storing in root of bucket)
S3_BUCKET_PATH="path/in/bucket"




###################################################
# replicaSet options
###################################################

# lock settings (slave nodes in replicaSets only)
# ensures consistent point in time backup
# instead consder using (--oplog) to MONGO_DUMP_OPTION
LOCK_WRITES="0"

# Only backup from slave (will randomly select slave in replicaSet).
# Useful if master/slave change frequently.  
# We connect to MONGO_HOST_PORT to find a slave.
# If using DNS for your mongo servers, host entires must be set on backup server.
AUTO_PICK_SLAVE="0"
